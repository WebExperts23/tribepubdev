{"ast":null,"code":"var _jsxFileName = \"D:\\\\Membership Platform\\\\src\\\\components\\\\PostsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getPosts } from '../ApolloClient'; // Import the `getPosts` function from your API utility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const data = await getPosts();\n        setPosts(data);\n      } catch (err) {\n        setError('Failed to fetch posts');\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title.rendered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: post.content.rendered\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsList, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = PostsList;\nexport default PostsList;\nvar _c;\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["React","useEffect","useState","getPosts","jsxDEV","_jsxDEV","PostsList","_s","posts","setPosts","error","setError","fetchPosts","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","rendered","dangerouslySetInnerHTML","__html","content","id","_c","$RefreshReg$"],"sources":["D:/Membership Platform/src/components/PostsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getPosts } from '../ApolloClient'; // Import the `getPosts` function from your API utility\r\n\r\nconst PostsList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const data = await getPosts();\r\n        setPosts(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch posts');\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id}>\r\n            <h2>{post.title.rendered}</h2>\r\n            <div dangerouslySetInnerHTML={{ __html: post.content.rendered }} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAAC,CAAC;QAC7BM,QAAQ,CAACI,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,uBAAuB,CAAC;QACjCI,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;MACpB;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAAW,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdjB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKM,IAAI,CAACC,KAAK,CAACC;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9Bf,OAAA;UAAKoB,uBAAuB,EAAE;YAAEC,MAAM,EAAEJ,IAAI,CAACK,OAAO,CAACH;UAAS;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAF5DE,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CAjCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}