{"ast":null,"code":"var _jsxFileName = \"D:\\\\Membership Platform\\\\src\\\\components\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_POST = gql`\n  mutation CreatePost($title: String!, $content: String!) {\n    createPost(input: { title: $title, content: $content }) {\n      post {\n        title\n        content\n      }\n    }\n  }\n`;\nfunction CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [createPost] = useMutation(CREATE_POST);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await createPost({\n        variables: {\n          title,\n          content\n        }\n      });\n      console.log(data.createPost.post);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"0jHWoOoCwbn9UN/E3tuzQ8Djob4=\", false, function () {\n  return [useMutation];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useMutation","gql","jsxDEV","_jsxDEV","CREATE_POST","CreatePost","_s","title","setTitle","content","setContent","createPost","handleSubmit","e","preventDefault","data","variables","console","log","post","error","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Membership Platform/src/components/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\n\r\nconst CREATE_POST = gql`\r\n  mutation CreatePost($title: String!, $content: String!) {\r\n    createPost(input: { title: $title, content: $content }) {\r\n      post {\r\n        title\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CreatePost() {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [createPost] = useMutation(CREATE_POST);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createPost({ variables: { title, content } });\r\n      console.log(data.createPost.post);\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Title:\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Content:\r\n        <textarea value={content} onChange={(e) => setContent(e.target.value)} />\r\n      </label>\r\n      <button type=\"submit\">Create Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGH,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASI,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,UAAU,CAAC,GAAGX,WAAW,CAACI,WAAW,CAAC;EAE7C,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMJ,UAAU,CAAC;QAAEK,SAAS,EAAE;UAAET,KAAK;UAAEE;QAAQ;MAAE,CAAC,CAAC;MACpEQ,OAAO,CAACC,GAAG,CAACH,IAAI,CAACJ,UAAU,CAACQ,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAMkB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,GAAO,QAEL,eAAAnB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEjB,KAAM;QAACkB,QAAQ,EAAGZ,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACR3B,OAAA;MAAAmB,QAAA,GAAO,UAEL,eAAAnB,OAAA;QAAUqB,KAAK,EAAEf,OAAQ;QAACgB,QAAQ,EAAGZ,CAAC,IAAKH,UAAU,CAACG,CAAC,CAACa,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACR3B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAACxB,EAAA,CA7BQD,UAAU;EAAA,QAGIL,WAAW;AAAA;AAAA+B,EAAA,GAHzB1B,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}